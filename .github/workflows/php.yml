name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        package-versions: [ 'lowest', 'stable' ]

    runs-on: ubuntu-latest

#    services:
#      mysql:
#        image: mysql:latest
#        env:
#          MYSQL_ALLOW_EMPTY_PASSWORD: false
#          MYSQL_ROOT_PASSWORD: password
#          MYSQL_DATABASE: dcb
#        ports:
#          - 3306/tcp
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_USER: root
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: dcb
#        ports:
#          - 5432/tcp
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo_mysql, pdo_sqlite, pdo_pgsql

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress --prefer-${{ matrix.package-versions }}

      - name: Run tests
        run: touch events.sqlite && composer run-script test

#      - name: Run tests (SQLite)
#        run: touch events.sqlite && composer run-script test
#        env:
#          DCB_TEST_DSN: "sqlite://events.sqlite"
#
#      - name: Run tests (MySQL)
#        run: composer run-script test
#        env:
#          DCB_TEST_DSN: "mysql://root:password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/dcb"
#
#      - name: Run tests (PostgreSQL)
#        run: composer run-script test
#        env:
#          DCB_TEST_DSN: "pgsql://root:password@127.0.0.1:${{ job.services.postgres.ports['5432'] }}/dcb"